@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div id="regForm" class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div class="tab" id="Section1">
                <input id="isMentor" asp-for="Input.IsMentor" value="false" />
                <button class="btn btn-primary" id="mentorBtnTru">Become a Mentor</button>
                <button class="btn btn-primary" id="mentorBtnFal">Find a Mentor</button>
            </div>
            <div class="tab" id="Section2">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.FirstName"></label>
                    <input asp-for="Input.FirstName" class="form-control" />
                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.LastName"></label>
                    <input asp-for="Input.LastName" class="form-control" />
                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.PhoneNumber"></label>
                    <input asp-for="Input.PhoneNumber" class="form-control" />
                    <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <button id="" class="btn btn-primary">Next</button>
            </div>
            <div class="tab" id="Section3">
                <div class="form-group">
                    <label asp-for="Input.DoB" class="control-label"></label>
                    <input asp-for="Input.DoB" class="form-control" />
                    <span asp-validation-for="Input.DoB" class="text-danger"></span>
                </div>
                @*the div that contains the image upload*@
                <div class="form-group">
                    <label asp-for="Input.File" class="control-label"></label>
                    <input asp-for="Input.File" type="file" class="form-control" />
                    <span asp-validation-for="Input.File" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Gender"></label>
                    <select asp-for="Input.Gender" class="form-control" asp-items="@Model.GenderOptions"></select>
                    @*<span asp-validation-for="Input.Gender" class="text-danger"></span>*@
                </div>
                <div class="form-group">
                    <label asp-for="Input.Pronouns"></label>
                    <input asp-for="Input.Pronouns" class="form-control" />
                    <span asp-validation-for="Input.Pronouns" class="text-danger"></span>
                </div>
            </div>
            <div class="tab" id="Section4">
               
                <div class="form-group">
                    <label asp-for="Input.CountryId"></label>
                    <select asp-for="Input.CountryId" class="form-control" asp-items="@Model.CountryOptions"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Languages"></label>
                    <select asp-for="Input.SelectLangIds" class="form-control" asp-items="@Model.LanguageOptions"></select>
                </div>
            </div>
            <div class="tab" id="Section5">
                <div class="form-group">
                    <label asp-for="Input.LanguagePref"></label>
                    <input asp-for="Input.LanguagePref" class="form-control" />
                    <span asp-validation-for="Input.LanguagePref" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.CountryPref"></label>
                    <input asp-for="Input.CountryPref" class="form-control" />
                    <span asp-validation-for="Input.CountryPref" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.GenderPref"></label>
                    <input asp-for="Input.GenderPref" class="form-control" />
                    <span asp-validation-for="Input.GenderPref" class="text-danger"></span>
                </div>
            </div>
            <div class="tab" id="Section6">
                <div class="form-group">
                    <label asp-for="Input.Availability"></label>
                    <input asp-for="Input.Availability" class="form-control" />
                    <span asp-validation-for="Input.Availability" class="text-danger"></span>
                </div>
            </div>

            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn">Previous</button>
                    <button type="button" id="nextBtn">Next</button>
                </div>
            </div>

            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
    <script>

        //buttons
        const isMentor = document.getElementById("isMentor")
        const mentorTrue = document.getElementById("mentorBtnTru")
        const mentorFalse = document.getElementById("mentorBtnFal")
        const nextBtn = document.getElementById("nextBtn")
        const prevBtn = document.getElementById("prevBtn")

        //"Views" by section
        const Section1 = document.getElementById("Section1")
        const Section2 = document.getElementById("Section2")
        const Section3 = document.getElementById("Section3")
        const Section4 = document.getElementById("Section4")
        const Section5 = document.getElementById("Section5")
        const Section6 = document.getElementById("Section6")


        //stepper logic
        let currentTab = 0;

        const fixStepIndicator = (n) => {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        }

        const showTab = (n) => {
            let x = document.getElementsByClassName("tab");
            x[n].style.display = "block";

            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }
            fixStepIndicator(n)
        }

        showTab(currentTab);


        const nextPrev = (n) => {
           
            var x = document.getElementsByClassName("tab");
            if (n == 1 && !validateForm()) return false;
            x[currentTab].style.display = "none";
            currentTab = currentTab + n;
            if (currentTab >= x.length) {
                document.getElementById("regForm").submit();
                return false;
            }
            showTab(currentTab);
        }

        ////unsure if need this function
        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        //event listeners for buttons
        mentorTrue.addEventListener("click", evt => {
            isMentor.value = "true"
        });

        mentorFalse.addEventListener("click", evt => {
            isMentor.value = "false"
        });

        nextBtn.addEventListener("click", evt => {
            nextPrev(1)
        });

        prevBtn.addEventListener("click", evt => {
            nextPrev(-1)
        });

    </script>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
